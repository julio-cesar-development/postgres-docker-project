apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-deployment
  namespace: blackdevs

spec:
  replicas: 1
  revisionHistoryLimit: 100

  selector:
    matchLabels:
      app: pg-project

  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 3

  template:
    metadata:
      name: api-deployment
      labels:
        app: pg-project

    spec:
      containers:
        - name: pg-api
          image: juliocesarmidia/pg-project-api:latest
          imagePullPolicy: IfNotPresent
          command:
            - "sh"
            - "-c"
            - "yarn install && yarn build && yarn start"

          ports:
            - containerPort: 40000
              name: api-port

          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: env-secrets
                  key: POSTGRES_USER

            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: env-secrets
                  key: POSTGRES_PASSWORD

            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: env-secrets
                  key: POSTGRES_DB

            - name: POSTGRES_HOST
              value: pg-svc.blackdevs

            - name: POSTGRES_PORT
              value: "5432"

            - name: FLUENTD_HOST
              value: fluentd-svc.blackdevs

            - name: HOST_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP

          livenessProbe:
            httpGet:
              path: /api/v1/healthcheck
              port: api-port
            initialDelaySeconds: 10
            timeoutSeconds: 30

          readinessProbe:
            httpGet:
              path: /api/v1/healthcheck
              port: api-port
            initialDelaySeconds: 10
            timeoutSeconds: 30

          resources:
            requests:
              memory: "128Mi"
              cpu: "256m"
            limits:
              memory: "128Mi"
              cpu: "256m"

      restartPolicy: Always

---

apiVersion: v1
kind: Service
metadata:
  name: api-svc
  namespace: blackdevs

spec:
  type: ClusterIP

  selector:
    app: pg-project

  ports:
    - port: 80
      targetPort: api-port
      protocol: TCP

---

apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: api-ingress
  namespace: blackdevs

  annotations:
    kubernetes.io/ingress.class: traefik
    traefik.ingress.kubernetes.io/rewrite-target: /
    traefik.ingress.kubernetes.io/load-balancer-method: "wrr"
    # drr Deficit Round Robin
    # wrr Weighted round robin

spec:
  rules:
  - http:
      paths:
        - path: /
          backend:
            serviceName: api-svc
            servicePort: 80
