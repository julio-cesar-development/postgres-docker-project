version: "3.4"

x-env:
  &default-env
  POSTGRES_USER: ${POSTGRES_USER:-postgres}
  POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
  POSTGRES_DB: ${POSTGRES_DB:-postgres_db}

services:
  postgres:
    container_name: postgres
    restart: on-failure
    image: postgres:9.6-alpine
    environment:
      <<: *default-env
    ports:
      - "35432:5432"
    volumes:
      - ./pg-init/init.sql:/docker-entrypoint-initdb.d/init.sql:rw
      - pg-data:/var/lib/postgresql/data:rw
    networks:
      pg_project_network:
        ipv4_address: 172.100.10.2
    domainname: cluster.local
    hostname: postgres

  api:
    container_name: api
    restart: on-failure
    build:
      context: ./api
      dockerfile: Dockerfile
    entrypoint: ["/app/docker-entrypoint.sh"]
    command: "sh -c 'yarn install && yarn build && yarn run dev'"
    environment:
      <<: *default-env
      POSTGRES_HOST: ${POSTGRES_HOST:-postgres}
      POSTGRES_PORT: ${POSTGRES_PORT:-5432}
      FLUENTD_HOST: ${FLUENTD_HOST:-fluentd}
      FLUENTD_PORT: ${FLUENTD_PORT:-24224}
      API_VERSION: ${API_VERSION:-development}
    ports:
      - "41000:40000"
    volumes:
      - ./api:/app:rw
      - /app/node_modules
    depends_on:
      - postgres
    networks:
      pg_project_network:
        ipv4_address: 172.100.10.3
    domainname: cluster.local
    hostname: api

  fluentd:
    container_name: fluentd
    restart: on-failure
    image: quay.io/fluentd_elasticsearch/fluentd:v2.5.2
    ports:
      - "24224:24224"
    volumes:
      - ./fluentd-config/fluent.conf:/etc/fluent/fluent.conf:rw
    networks:
      pg_project_network:
        ipv4_address: 172.100.10.4
    domainname: cluster.local
    hostname: fluentd

networks:
  pg_project_network:
    driver: bridge
    driver_opts:
      com.docker.network.enable_ipv6: "false"
    ipam:
      driver: default
      config:
      - subnet: 172.100.10.0/24

volumes:
  pg-data:
